define(["jbinary"],function(b){return{__funDefs:{"jBinary.littleEndian":!0,"jBinary.mimeType":"application/octet-stream",ItemIndexRleDe:b.Template({setParams:function(a){this.dataLength=a;this.baseType={values:["array","uint8",a]}},read:function(){var a=[],c=this.baseRead();if(0<this.dataLength){for(var b=[],e=0,d=0;d<c.values.length;++e){var f=0,g=0,h=0;do f|=(c.values[d+g]&127)<<h,++g,h+=7;while(5>g&&c.values[d+g-1]&128);d+=g;b[e]=f}c.size=b[0];f=0;e=2;for(d=0;e<b.length&&d<c.size;){val=b[e];++e;
if(val&1){rle=val>>1;val=b[e];++e;val>>=1;for(--rle;rle;)f+=val,a[d]=f,++d,--rle;f+=val}else f+=val>>1;a[d]=f;++d}if(a.length!==c.size||e<b.length)throw new RangeError("ItemIndexDecoding failed with out of bounds");}if(c=this.dataLength%4)this.binary.skip(4-c),this.binary.view._bitOffset=0;return a}}),ItemIndexNative:b.Template({setParams:function(){this.baseType={count:"uint32"}},read:function(){var a=this.baseRead(),a=this.binary.read({values:["array","uint32",a.count]});return void 0===a.values?
(console.log("ItemIndexNative: values are undefined"),[]):a.values}}),ItemIndex:b.Template({setParams:function(a){this.baseType={id:"uint32",dataLength:"uint32"};this.itemIndexType=a},read:function(){var a=this.baseRead(),c;if(a.dataLength){if(16===this.itemIndexType)c=this.binary.read({value:["ItemIndexRleDe",a.dataLength]});else if(32===this.itemIndexType)c=this.binary.read({value:"ItemIndexNative"});else throw TypeError("Unsupported ItemIndex type: "+itemIndexType);c=c.value}else c=[];return{id:a.id,
values:c}}}),ItemIndexSet:b.Template({setParams:function(){this.baseType={version:"uint32",idxformat:"uint32",idxcompression:"uint32",idxcount:"uint32"}},read:function(){var a=this.baseRead();return this.binary.read({values:["array",["ItemIndex",a.idxformat],a.idxcount]}).values}}),BinarySubSet:b.Template({setParams:function(){this.baseType={type:"uint8",rootChildrenSize:"uint32",rootChildrenIds:["array","uint32","rootChildrenSize"],data:["array","uint32"]}},read:function(){var a=this.baseRead(),
c={type:"s"==a.type?"full":"sparse",rootchildren:a.rootChildrenIds,regions:{}};for(i=0;i<a.data.length;){var b=a.data[i],e=a.data[i+1],d=a.data[i+2],f=a.data[i+3],g=a.data.slice(i+4,i+4+d),h=a.data.slice(i+4+d,i+4+d+f);c.regions[b]={apxitems:e,cellpositions:g,children:h};i+=4+d+f}return c}}),CellQueryResult:b.Template({setParams:function(){this.baseType={cellInfo:"U32Array",indcs:"ItemIndexSet",cellIdxIds:"U32Array",subSet:"BinarySubSet"}},read:function(){var a=this.baseRead(),c={cellInfo:[],subSet:a.subSet};
if(0<a.cellInfo.length)for(var b=function(a){this.cellId=a>>2;this.fetched=a&2;this.fullIndex=a&1},e=0,d=0,f=0;e<a.cellInfo.length;++e){var g=new b(a.cellInfo[e]);g.fetched?(g.index=a.indcs[d],++d):g.fullIndex||(g.indexId=a.cellIdxIds[f],++f);c.cellInfo[e]=g}return c}}),SimpleCellQueryResult:b.Template({setParams:function(){this.baseType={rootRegionApxItemCount:"uint32",ohPath:"U32Array",childrenInfoSize:"uint32",childrenInfo:["array","U32Array","childrenInfoSize"]}},read:function(){var a=this.baseRead(),
b={};for(i=0;i<a.childrenInfo.length;++i){var k=a.childrenInfo[i],e=k[0],d=[];j=1;for(count=0;j<k.length;j+=2,++count)d[count]={id:k[j],apxitems:k[j+1]};d.sort(function(a,b){return b.apxitems-a.apxitems});b[e]=d}return{ohPath:a.ohPath,regionInfo:b,rootRegionApxItemCount:a.rootRegionApxItemCount}}}),ReducedCellQueryResult:b.Template({setParams:function(){this.baseType={index:"ItemIndex",subSet:"BinarySubSet"}},read:function(){var a=this.baseRead();return{index:a.index,subSet:a.subSet}}}),U32Array:b.Template({setParams:function(){this.baseType=
{count:"uint32",value:["array","uint32","count"]}},read:function(){return this.baseRead().value}})},itemIndexFromRaw:function(a){return(new b(a,this.__funDefs)).read("ItemIndex",0)},itemIndexSetFromRaw:function(a){return(new b(a,this.__funDefs)).read("ItemIndexSet",0)},cqrFromRaw:function(a){return(new b(a,this.__funDefs)).read("CellQueryResult",0)},simpleCqrFromRaw:function(a){return(new b(a,this.__funDefs)).read("SimpleCellQueryResult",0)},reducedCqrFromRaw:function(a){return(new b(a,this.__funDefs)).read("ReducedCellQueryResult",
0)},asArray:function(a,c){return(new b(a,this.__funDefs)).read(["array",c])},asU32Array:function(a){return(new b(a,this.__funDefs)).read("U32Array",0)}}});
